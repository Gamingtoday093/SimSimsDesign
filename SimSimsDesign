@startuml
left to right direction

/' Resources '/

class Resource {
    
}

class Worker {
    - __health: int
    + <<get, set>> health: int
    + is_dead(): bool
}

class Food {
    - __quality: int
    + <<get, set>> quality: int
}

class Product {
    
}

Resource <-- Worker
Resource <-- Food
Resource <-- Product

/' Locations '/    

class Location {
    + add_resource(resource: Resource): void
    + take_resource(): Resource | None
}

class Barack {
    - __workers: queue<Worker>
}

class Barn {
    - __foods: queue<Food>
}

class Storage {
    - __products: stack<Product>
}

Location <-- Barack
Location <-- Barn
Location <-- Storage

/' Transitions '/

class Transition {
    + transition(): void
    + has_resources(): bool
    + get_resources(): void
}

class Factory {
    - __channel_workers_in: Channel
    - __channel_workers_out: Channel
    - __channel_products_out: Channel

    - __workers: queue<Worker>
    - __risk: int
    + <<get, set>> risk: int
}

class FarmField {
    - __channel_workers_in: Channel
    - __channel_workers_out: Channel
    - __channel_foods_out: Channel

    - __workers: queue<Worker>
}

class FoodCourt {
    - __channel_workers_in: Channel
    - __channel_foods_in: Channel
    - __channel_workers_out: Channel

    - __workers: queue<Worker>
    - __foods: queue<Food>
}

class Home {
    - __channel_workers_in: Channel
    - __channel_products_in: Channel
    - __channel_workers_out: Channel

    - __workers: queue<Worker>
    - __products: queue<Product>

    - __reproduce: bool
    + update_reproduce(): void
}

Transition <- Factory
Transition <- FarmField
Transition <- FoodCourt
Transition <- Home

/' Channel '/

class Channel {
    - __location: Location
    + <<get>> location: Location
}

Location o-- Channel

Factory *-- Channel
FarmField *-- Channel
FoodCourt *-- Channel
Home *-- Channel

Location *-- Resource
Barack *-- Worker
Barn *-- Food
Storage *-- Product

Factory *-- Worker
FarmField *-- Worker
FoodCourt *-- Worker
FoodCourt *-- Food
Home *-- Worker
Home *-- Product

@enduml
